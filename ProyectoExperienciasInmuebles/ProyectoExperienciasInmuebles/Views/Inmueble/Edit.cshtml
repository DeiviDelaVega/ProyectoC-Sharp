@model ProyectoExperienciasInmuebles.Models.Inmueble

@{
    ViewBag.Title = "Editar Inmueble";
    Layout = null;
}

<div>
    @Html.Partial("_HeaderNav")
</div>

<link rel="stylesheet" href="~/Content/css/MantCliente.css" />
<br />
<h2 class="text-center">EDITAR INMUEBLE @Model.id_inmueble</h2>

@using (Html.BeginForm("Edit", "Inmueble", FormMethod.Post, new { id = "form-actualizar" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Modifica la información del inmueble</h4>
        <hr />
        <br />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        @Html.HiddenFor(model => model.id_inmueble)

        <div class="form-row">
            <div class="form-group col-md-6">
                @Html.LabelFor(model => model.titulo)
                @Html.EditorFor(model => model.titulo, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.titulo, "", new { @class = "text-danger" })
            </div>

            <div class="form-group col-md-6">
                @Html.LabelFor(model => model.descripcion)
                @Html.EditorFor(model => model.descripcion, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.descripcion, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-row">
            <div class="form-group col-md-6">
                @Html.LabelFor(model => model.direccion)
                @Html.EditorFor(model => model.direccion, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.direccion, "", new { @class = "text-danger" })
            </div>

            <div class="form-group col-md-6">
                @Html.LabelFor(model => model.precio)
                @Html.EditorFor(model => model.precio, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.precio, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-row">
            <div class="form-group col-md-6">
                @Html.LabelFor(model => model.imagen)
                @Html.EditorFor(model => model.imagen, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.imagen, "", new { @class = "text-danger" })
            </div>

            <div class="form-group col-md-6">
                @Html.LabelFor(model => model.estado)
                @Html.EditorFor(model => model.estado, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.estado, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-row">
            <div class="form-group col-md-6">
                @Html.LabelFor(model => model.fecharegistro)
                @Html.TextBoxFor(model => model.fecharegistro, "{0:yyyy-MM-dd}", new { @class = "form-control", type = "date", @readonly = "readonly" })
                @Html.ValidationMessageFor(model => model.fecharegistro, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="button-group-container">
            <button type="submit" class="btn btn-dark" onclick="return confirmarActualizacion()">Actualizar</button>
            @Html.ActionLink("Retornar", "ListInmuebles", null, new { @class = "btn btn-secondary button-spacer" })
        </div>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}

<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.1/dist/js/bootstrap.bundle.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

<script>
    function confirmarActualizacion() {
        Swal.fire({
            title: '¿Actualizar inmueble?',
            text: "Esta acción modificará los datos registrados.",
            icon: 'warning',
            showCancelButton: true,
            confirmButtonColor: '#d33',
            cancelButtonColor: '#3085d6',
            confirmButtonText: 'Sí, actualizar',
            cancelButtonText: 'Cancelar'
        }).then((result) => {
            if (result.isConfirmed) {
                document.getElementById('form-actualizar').submit();
            }
        });
        return false;
    }

    @if (ViewBag.Actualizado != null && ViewBag.Actualizado == false)
    {
        <text>
            Swal.fire({
                title: 'Error de Actualización',
                text: 'No se pudo actualizar el inmueble. Revise los datos.',
                icon: 'error',
                confirmButtonText: 'Aceptar'
            });
        </text>
    }

    @if (ViewBag.Actualizado != null && ViewBag.Actualizado == true)
    {
        <text>
            Swal.fire({
                title: '¡Inmueble actualizado!',
                text: 'Los datos del inmueble se guardaron correctamente.',
                icon: 'success',
                confirmButtonText: 'Aceptar'
            });
        </text>
    }
</script>
