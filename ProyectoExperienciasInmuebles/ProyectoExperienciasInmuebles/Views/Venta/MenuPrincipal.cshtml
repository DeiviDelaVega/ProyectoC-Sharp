@model IEnumerable<ProyectoExperienciasInmuebles.Models.Inmueble>

@{
    ViewBag.Title = "Inmuebles Disponibles";
    Layout = null;
}

<div>
    @Html.Partial("_HeaderVenta")
</div>

<link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.0/css/all.min.css" rel="stylesheet" />
<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.1/dist/css/bootstrap.min.css" rel="stylesheet" />

<style>
    .card-inmueble {
        border: 1px solid #ddd;
        border-radius: 12px;
        margin-bottom: 30px;
        box-shadow: 0 4px 8px rgba(0,0,0,0.1);
    }

        .card-inmueble .img-fluid {
            border-radius: 12px 0 0 12px;
            height: 100%;
            object-fit: cover;
        }

    .iconos-servicios i {
        margin-right: 8px;
        font-size: 18px;
        color: #555;
    }

    .precio {
        font-size: 22px;
        color: #333;
    }

    .btn-reservar {
        background-color: #5a5a5a;
        color: white;
        border: none;
        padding: 8px 16px;
        border-radius: 6px;
        font-weight: bold;
    }

        .btn-reservar:hover {
            background-color: #343434;
        }
</style>

<div class="container mt-4">
    <h2 class="text-center mb-4">Inmuebles Disponibles</h2>
    <p>
        @using (Html.BeginForm())
        {
            <label>Nombre del Empleado</label>
            @Html.TextBox("titulo", "")
            <button>Procesar</button>
        }
    </p>

    @foreach (var item in Model)
    {
        <div class="row card-inmueble p-3">
            <div class="col-md-4">
                <img src="@item.imagen" class="img-fluid w-100 h-100" alt="Imagen del Inmueble" />
            </div>
            <div class="col-md-5 d-flex flex-column justify-content-between">
                <div>
                    <h4><strong>@item.titulo</strong></h4>
                    <p>@item.descripcion</p>
                    <p><strong>Dirección:</strong> @item.direccion</p>
                </div>
                <div class="mt-2">
                    <span class="text-muted">Registrado: @item.fecharegistro.ToString("dd/MM/yyyy")</span>
                </div>
            </div>
            <div class="col-md-3 d-flex flex-column justify-content-center align-items-center">
                <span class="precio">S/.@item.precio</span>
                <a href="@Url.Action("Details", new { id = item.id_inmueble })" class="btn btn-reservar mt-3">Reservar</a>
            </div>
        </div>
    }

    <!-- Paginación -->
    <div class="text-center mt-4">
        @{
            int totalPaginas = ViewBag.totalPaginas;
            int p = ViewBag.p;
            int startPageDisplay = ViewBag.startPageDisplay;
            int pagesToShow = ViewBag.pagesToShow;

            int actualStartPage = startPageDisplay;
            int actualEndPage = Math.Min(startPageDisplay + pagesToShow - 1, totalPaginas - 1);

            if (totalPaginas <= pagesToShow)
            {
                actualStartPage = 0;
                actualEndPage = totalPaginas - 1;
            }
            else if (actualEndPage - actualStartPage + 1 < pagesToShow)
            {
                actualStartPage = Math.Max(0, actualEndPage - pagesToShow + 1);
            }
        }

        @if (actualStartPage > 0)
        {
            int newStartPageDisplay = Math.Max(0, actualStartPage - pagesToShow);
            <a href="@Url.Action("MenuPrincipal", new { p = p, startPageDisplay = newStartPageDisplay })" class="btn btn-outline-secondary m-1">&laquo; Prev</a>
        }
        else
        {
            <button class="btn btn-outline-secondary m-1" disabled>&laquo; Prev</button>
        }

        @for (int i = actualStartPage; i <= actualEndPage; i++)
        {
            <a href="@Url.Action("MenuPrincipal", new { p = i, startPageDisplay = startPageDisplay })"
               class="btn @(i == p ? "btn-dark" : "btn-outline-secondary") m-1">@(i + 1)</a>
        }

        @if (actualEndPage < totalPaginas - 1)
        {
            int newStartPageDisplay = Math.Min(totalPaginas - pagesToShow, actualStartPage + pagesToShow);
            <a href="@Url.Action("MenuPrincipal", new { p = p, startPageDisplay = newStartPageDisplay })" class="btn btn-outline-secondary m-1">Next &raquo;</a>
        }
        else
        {
            <button class="btn btn-outline-secondary m-1" disabled>Next &raquo;</button>
        }
    </div>
</div>
